import{_ as i,c as a,o as n,a9 as h}from"./chunks/framework.GQWhFI7o.js";const E=JSON.parse('{"title":"C 的 main 函数","description":"","frontmatter":{"createDate":"2019/10/27","title":"C 的 main 函数"},"headers":[],"relativePath":"派的玩耍小记/C 的 main 函数/index.md","filePath":"派的玩耍小记/C 的 main 函数/index.md","lastUpdated":1757842650000}'),k={name:"派的玩耍小记/C 的 main 函数/index.md"};function p(l,s,t,e,F,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h3 id="linux-c-程序入口函数-main-小解" tabindex="-1">Linux C 程序入口函数 main() 小解 <a class="header-anchor" href="#linux-c-程序入口函数-main-小解" aria-label="Permalink to &quot;Linux C 程序入口函数 main() 小解&quot;">​</a></h3><p>2019年10月27日</p><p>Linux 系统中，C 程序总是从 <code>main()</code> 函数开始的，当用户编写好的程序在运行的时候，操作系统慧使用 <code>exec()</code> 函数运行程序。在调用 <code>main()</code> 之前，<code>exec()</code> 系统调用会先调用一个特殊的启动例程，负责从操作系统内核读取程序的命令行参数，为 <code>main()</code> 函数准备好工作环境。</p><p><code>main()</code> 函数的定义为</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> envp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>参数 argc 表示 命令行参数的个数，即参数 argv 的长度，argv 是一个字符串数组指针，argv 的元素就是参数的内容。envp 是系统环境变量列表，存放了一组进程运行过程中会用到的环境变量。</p><p>ANSI 规定 <code>main()</code> 函数只有前两个参数，而 POSIX 则使用了一个全局的环境变量 environ 来取代 envp ，应用程序可以通过 <code>getenv()</code> 和 <code>putenv()</code> 函数来读取或者设置一个环境变量。</p><h4 id="系统如何执行-main-函数" tabindex="-1">系统如何执行 <code>main()</code> 函数 <a class="header-anchor" href="#系统如何执行-main-函数" aria-label="Permalink to &quot;系统如何执行 \`main()\` 函数&quot;">​</a></h4><p>用 strace 来分析 <code>main()</code> 的执行。我们先写一段测试用的程序：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> envp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> argc; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Argument </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">argv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[i]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>接下来编译链接：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mian.c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>得到可执行文件 main ，然后运行它</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;arg1&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;arg2&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg1.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg2.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg3.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>程序运行正确。接下来用 strace 查看系统调用情况：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> strace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;arg1&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;arg2&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execve(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;./main&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;arg1&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;arg2&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;arg3&quot;],</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x7fd6828c78</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vars</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brk(NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                               = 0x558ddaf000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">faccessat(AT_FDCWD,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/etc/ld.so.nohwcap&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> F_OK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = -1 ENOENT (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">faccessat(AT_FDCWD,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/etc/ld.so.preload&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> R_OK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = -1 ENOENT (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openat(AT_FDCWD,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/etc/ld.so.cache&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> O_RDONLY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">O_CLOEXEC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fstat(3,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {st_mode=S_IFREG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0644,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> st_size=89739,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mmap(NULL,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 89739,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAP_PRIVATE,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0x7f81dba000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close(3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                                = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">faccessat(AT_FDCWD,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/etc/ld.so.nohwcap&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> F_OK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = -1 ENOENT (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openat(AT_FDCWD,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/lib/aarch64-linux-gnu/libc.so.6&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> O_RDONLY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">O_CLOEXEC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0\\267\\0\\1\\0\\0\\0 \\10\\2\\0\\0\\0\\0\\0&quot;...,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 832</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 832</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fstat(3,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {st_mode=S_IFREG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0755,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> st_size=1341080,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mmap(NULL,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8192,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PROT_WRITE,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAP_PRIVATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MAP_ANONYMOUS,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0x7f81df8000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mmap(NULL,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1409880,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PROT_EXEC,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAP_PRIVATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MAP_DENYWRITE,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0x7f81c61000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mprotect(0x7f81da1000,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 61440,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_NONE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mmap(0x7f81db0000,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 24576,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PROT_WRITE,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAP_PRIVATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MAP_FIXED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MAP_DENYWRITE,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x13f000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0x7f81db0000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mmap(0x7f81db6000,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 13144,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PROT_WRITE,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAP_PRIVATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MAP_FIXED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MAP_ANONYMOUS,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0x7f81db6000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close(3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                                = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mprotect(0x7f81db0000,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 16384,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mprotect(0x5585a3f000,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4096,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mprotect(0x7f81dfc000,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 4096,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROT_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">munmap(0x7f81dba000,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 89739</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)             = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fstat(1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {st_mode=S_IFCHR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0620,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> st_rdev=makedev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">136,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brk(NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                               = 0x558ddaf000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brk(0x558ddd0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                       = 0x558ddd0000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write(1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Argument 0 is ./main.\\n&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 22Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) = 22</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write(1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Argument 1 is arg1.\\n&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 20Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg1.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   = 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write(1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Argument 2 is arg2.\\n&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 20Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg2.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   = 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write(1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Argument 3 is arg3.\\n&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 20Argument</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arg3.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   = 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit_group(0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                           = </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exited</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +++</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>运行程序，系统将会从 <code>mian()</code> 函数开始执行，执行系统调用 <code>execve()</code> 函数为程序开辟新的进程。执行 <code>execve()</code> 函数的时候，系统将执行 <code>./main</code> 命令中的所有参数以字符串指针的方式传递给了 <code>execve()</code> 。执行参数包含可执行文件自身，所以我们可以看到 argv 的长度为 4。</p><p>了解系统调用 <code>execve()</code> 函数可以查看<a href="./../gcc 的编译过程/">这篇</a>了解</p>`,18)]))}const g=i(k,[["render",p]]);export{E as __pageData,g as default};
