import{_ as e,c as n,o as r,a8 as o}from"./chunks/framework.Cc4yYURl.js";const b=JSON.parse('{"title":"隐式转换","description":"","frontmatter":{},"headers":[],"relativePath":"技术的小记/JavaScript 隐式转换/mindmap.md","filePath":"技术的小记/JavaScript 隐式转换/mindmap.md","lastUpdated":1757037616000}'),d={name:"技术的小记/JavaScript 隐式转换/mindmap.md"};function t(l,a,i,c,h,u){return r(),n("div",null,a[0]||(a[0]=[o('<h1 id="隐式转换" tabindex="-1">隐式转换 <a class="header-anchor" href="#隐式转换" aria-label="Permalink to &quot;隐式转换&quot;">​</a></h1><h2 id="算术运算" tabindex="-1">算术运算 <a class="header-anchor" href="#算术运算" aria-label="Permalink to &quot;算术运算&quot;">​</a></h2><h3 id="加法" tabindex="-1">加法 <a class="header-anchor" href="#加法" aria-label="Permalink to &quot;加法&quot;">​</a></h3><h4 id="string-any" tabindex="-1"><code>string</code> + <code>any</code> <a class="header-anchor" href="#string-any" aria-label="Permalink to &quot;`string` + `any`&quot;">​</a></h4><h5 id="字符串拼接-非-string-类型转换成-string" tabindex="-1">字符串拼接，非 <code>string</code> 类型转换成 <code>string</code> <a class="header-anchor" href="#字符串拼接-非-string-类型转换成-string" aria-label="Permalink to &quot;字符串拼接，非 `string` 类型转换成 `string`&quot;">​</a></h5><h4 id="number-除了-string-外其他原始量" tabindex="-1"><code>number</code> + 除了 <code>string</code> 外其他原始量 <a class="header-anchor" href="#number-除了-string-外其他原始量" aria-label="Permalink to &quot;`number` + 除了 `string` 外其他原始量&quot;">​</a></h4><h5 id="非-number-类型转换成-number-类型" tabindex="-1">非 <code>number</code> 类型转换成 <code>number</code> 类型 <a class="header-anchor" href="#非-number-类型转换成-number-类型" aria-label="Permalink to &quot;非 `number` 类型转换成 `number` 类型&quot;">​</a></h5><h4 id="number-非原始量" tabindex="-1"><code>number</code> + 非原始量 <a class="header-anchor" href="#number-非原始量" aria-label="Permalink to &quot;`number` + 非原始量&quot;">​</a></h4><h5 id="两边都转换成-string-类型" tabindex="-1"><code>+</code> 两边都转换成 <code>string</code> 类型 <a class="header-anchor" href="#两边都转换成-string-类型" aria-label="Permalink to &quot;`+` 两边都转换成 `string` 类型&quot;">​</a></h5><h3 id="减法、乘法、除法" tabindex="-1">减法、乘法、除法 <a class="header-anchor" href="#减法、乘法、除法" aria-label="Permalink to &quot;减法、乘法、除法&quot;">​</a></h3><h4 id="符号两边非-number-转换成-number" tabindex="-1">符号两边非 <code>number</code> 转换成 <code>number</code> <a class="header-anchor" href="#符号两边非-number-转换成-number" aria-label="Permalink to &quot;符号两边非 `number` 转换成 `number`&quot;">​</a></h4><h2 id="逻辑运算" tabindex="-1">逻辑运算 <a class="header-anchor" href="#逻辑运算" aria-label="Permalink to &quot;逻辑运算&quot;">​</a></h2><h3 id="作为单独的条件" tabindex="-1">作为单独的条件 <a class="header-anchor" href="#作为单独的条件" aria-label="Permalink to &quot;作为单独的条件&quot;">​</a></h3><h4 id="null-undefined-nan-∓0-0n-false" tabindex="-1"><code>null</code>, <code>undefined</code>, <code>&#39;&#39;</code>, <code>NaN</code>, <code>∓0</code>, <code>0n</code>, <code>false</code> <a class="header-anchor" href="#null-undefined-nan-∓0-0n-false" aria-label="Permalink to &quot;`null`, `undefined`, `&#39;&#39;`, `NaN`, `∓0`, `0n`, `false`&quot;">​</a></h4><h5 id="falsy-1" tabindex="-1">falsy <sup><a href="#falsy">1</a></sup> <a class="header-anchor" href="#falsy-1" aria-label="Permalink to &quot;falsy &lt;sup&gt;[1](#falsy)&lt;/sup&gt;&quot;">​</a></h5><h4 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h4><h5 id="true" tabindex="-1">true <a class="header-anchor" href="#true" aria-label="Permalink to &quot;true&quot;">​</a></h5><h3 id="非严格比较" tabindex="-1">非严格比较 <code>==</code> <a class="header-anchor" href="#非严格比较" aria-label="Permalink to &quot;非严格比较 `==`&quot;">​</a></h3><h4 id="nan-any" tabindex="-1"><code>NaN</code> == <code>any</code> <a class="header-anchor" href="#nan-any" aria-label="Permalink to &quot;`NaN` == `any`&quot;">​</a></h4><h5 id="false-nan-nan-也是-false" tabindex="-1">false ，<code>NaN</code> == <code>NaN</code> 也是 false <a class="header-anchor" href="#false-nan-nan-也是-false" aria-label="Permalink to &quot;false ，`NaN` == `NaN` 也是 false&quot;">​</a></h5><h4 id="boolean-else" tabindex="-1"><code>boolean</code> == <code>else</code> <a class="header-anchor" href="#boolean-else" aria-label="Permalink to &quot;`boolean` == `else`&quot;">​</a></h4><h5 id="boolean-转换成-number" tabindex="-1"><code>boolean</code> 转换成 <code>number</code> <a class="header-anchor" href="#boolean-转换成-number" aria-label="Permalink to &quot;`boolean` 转换成 `number`&quot;">​</a></h5><h4 id="string-number" tabindex="-1"><code>string</code> == <code>number</code> <a class="header-anchor" href="#string-number" aria-label="Permalink to &quot;`string` == `number`&quot;">​</a></h4><h5 id="string-转换成-number" tabindex="-1"><code>string</code> 转换成 <code>number</code> <a class="header-anchor" href="#string-转换成-number" aria-label="Permalink to &quot;`string` 转换成 `number`&quot;">​</a></h5><h4 id="null-any" tabindex="-1"><code>null</code> == <code>any</code> <a class="header-anchor" href="#null-any" aria-label="Permalink to &quot;`null` == `any`&quot;">​</a></h4><h5 id="any-是-null-或-undefined-时-true" tabindex="-1"><code>any</code> 是 <code>null</code> 或 <code>undefined</code> 时 true <a class="header-anchor" href="#any-是-null-或-undefined-时-true" aria-label="Permalink to &quot;`any` 是 `null` 或 `undefined` 时 true&quot;">​</a></h5><h5 id="any-是其他时-false" tabindex="-1"><code>any</code> 是其他时 false <a class="header-anchor" href="#any-是其他时-false" aria-label="Permalink to &quot;`any` 是其他时 false&quot;">​</a></h5><h4 id="undefined-any" tabindex="-1"><code>undefined</code> == <code>any</code> <a class="header-anchor" href="#undefined-any" aria-label="Permalink to &quot;`undefined` == `any`&quot;">​</a></h4><h5 id="any-是-null-或-undefined-时-true-1" tabindex="-1"><code>any</code> 是 <code>null</code> 或 <code>undefined</code> 时 true <a class="header-anchor" href="#any-是-null-或-undefined-时-true-1" aria-label="Permalink to &quot;`any` 是 `null` 或 `undefined` 时 true&quot;">​</a></h5><h5 id="any-是其他时-false-1" tabindex="-1"><code>any</code> 是其他时 false <a class="header-anchor" href="#any-是其他时-false-1" aria-label="Permalink to &quot;`any` 是其他时 false&quot;">​</a></h5><h4 id="原始量-非原始量" tabindex="-1">原始量 == 非原始量 <a class="header-anchor" href="#原始量-非原始量" aria-label="Permalink to &quot;原始量 == 非原始量&quot;">​</a></h4><h5 id="非原始量-转换成-原始量-再对比2" tabindex="-1">非原始量 转换成 原始量 再对比<sup><a href="#toPrimitive">2</a></sup> <a class="header-anchor" href="#非原始量-转换成-原始量-再对比2" aria-label="Permalink to &quot;非原始量 转换成 原始量 再对比&lt;sup&gt;[2](#toPrimitive)&lt;/sup&gt;&quot;">​</a></h5>',32)]))}const m=e(d,[["render",t]]);export{b as __pageData,m as default};
